name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Run unit tests
        run: pnpm run test:unit

      - name: Generate coverage report
        run: pnpm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: pnpm run test:e2e --project=${{ matrix.browser }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: test-results/
          retention-days: 30

  extension-tests:
    name: Extension Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build extension
        run: pnpm run build:extension

      - name: Run extension tests
        run: pnpm run test:extension

      - name: Upload extension build
        uses: actions/upload-artifact@v3
        with:
          name: extension-build
          path: apps/chrome-extension/web/.next/
          retention-days: 30

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Start development server
        run: pnpm run dev &
        env:
          CI: true

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      - name: Run Lighthouse CI
        run: |
          npx lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 30

  cross-browser-tests:
    name: Cross-Browser Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run cross-browser tests
        run: pnpm run test:cross-browser

      - name: Upload cross-browser results
        uses: actions/upload-artifact@v3
        with:
          name: cross-browser-results
          path: test-results/
          retention-days: 30

  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm run lint

      - name: Run type checking
        run: pnpm run type-check

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run security audit
        run: pnpm audit

      - name: Run dependency check
        run: npx audit-ci --moderate

  build-and-package:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, lint-and-type-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared packages
        run: pnpm run packages:build

      - name: Build extension
        run: pnpm run build:extension

      - name: Package extension
        run: pnpm run package

      - name: Upload packaged extension
        uses: actions/upload-artifact@v3
        with:
          name: samantha-ai-extension
          path: samantha-ai-extension.zip
          retention-days: 30

  testspirit-integration:
    name: TestSpirit Integration
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install TestSpirit
        run: npm install @testspirit/playwright

      - name: Run TestSpirit tests
        run: npx testspirit test --project=voice-commands

      - name: Upload TestSpirit results
        uses: actions/upload-artifact@v3
        with:
          name: testspirit-results
          path: testspirit-results/
          retention-days: 30
